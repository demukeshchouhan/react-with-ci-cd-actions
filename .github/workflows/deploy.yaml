name: Deploy Project
on:
  pull_request:
    types:
      - opened
    branches:
      - main
      - "feature/**"
    paths:
      - "src/core/**"
  push:
    branches:
      - main
      - "dev-*" # dev-new dev-this-is-new
      - "feature/**" # feature/new #feature/new/button
    # paths-ignore:
    #   - ".github/workflows/*"
env:
  MONGODB_URL: gha-ds
jobs:
  lint:
    environment: testing
    env:
      TEST_VAL: "this is testing env."
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint Code
        run: npm run lint
      - name: env var output
        run: |
          echo "TEST_VAL = ${{env.MONGODB_URL}}"
          echo "TEST_ENV_VAR = ${{secrets.TEST_ENV_VAR}}"
  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run Tests
        continue-on-error: true
        id: run-test
        run: npm test
      - name: Upload Test Report
        if: failure() && steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build Code
        id: build-code
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
      - name: Get Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files

  deploy:
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Output Filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."

  report:
    needs: [lint, test, build, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        run: |
          echo "Something went wrong"
          echo "${{ toJson(github) }}"
